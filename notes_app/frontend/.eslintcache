[{"/Users/tech/Documents/DentalBee/notes_app/frontend/src/index.js":"1","/Users/tech/Documents/DentalBee/notes_app/frontend/src/App.js":"2","/Users/tech/Documents/DentalBee/notes_app/frontend/src/store.js":"3","/Users/tech/Documents/DentalBee/notes_app/frontend/src/PrivateRoute.js":"4","/Users/tech/Documents/DentalBee/notes_app/frontend/src/reducers/index.js":"5","/Users/tech/Documents/DentalBee/notes_app/frontend/src/components/Alerts/Alerts.js":"6","/Users/tech/Documents/DentalBee/notes_app/frontend/src/containers/Navbar/Navbar.js":"7","/Users/tech/Documents/DentalBee/notes_app/frontend/src/pages/Login/Login.js":"8","/Users/tech/Documents/DentalBee/notes_app/frontend/src/pages/Home/Home.js":"9","/Users/tech/Documents/DentalBee/notes_app/frontend/src/pages/Register/Register.js":"10","/Users/tech/Documents/DentalBee/notes_app/frontend/src/reducers/alerts.js":"11","/Users/tech/Documents/DentalBee/notes_app/frontend/src/reducers/auth.js":"12","/Users/tech/Documents/DentalBee/notes_app/frontend/src/reducers/notes.js":"13","/Users/tech/Documents/DentalBee/notes_app/frontend/src/actions/alerts.js":"14","/Users/tech/Documents/DentalBee/notes_app/frontend/src/actions/notes.js":"15","/Users/tech/Documents/DentalBee/notes_app/frontend/src/actions/auth.js":"16","/Users/tech/Documents/DentalBee/notes_app/frontend/src/containers/AddNote/AddNote.js":"17","/Users/tech/Documents/DentalBee/notes_app/frontend/src/components/Note/Note.js":"18","/Users/tech/Documents/DentalBee/notes_app/frontend/src/actions/types.js":"19"},{"size":636,"mtime":1733995600569,"results":"20","hashOfConfig":"21"},{"size":687,"mtime":1733995600563,"results":"22","hashOfConfig":"21"},{"size":325,"mtime":1733995600571,"results":"23","hashOfConfig":"21"},{"size":574,"mtime":1733995600563,"results":"24","hashOfConfig":"21"},{"size":270,"mtime":1733995600571,"results":"25","hashOfConfig":"21"},{"size":497,"mtime":1733995600567,"results":"26","hashOfConfig":"21"},{"size":1172,"mtime":1734012400526,"results":"27","hashOfConfig":"21"},{"size":1574,"mtime":1733995600570,"results":"28","hashOfConfig":"21"},{"size":8983,"mtime":1734099442215,"results":"29","hashOfConfig":"21"},{"size":2374,"mtime":1733995600570,"results":"30","hashOfConfig":"21"},{"size":502,"mtime":1733995600570,"results":"31","hashOfConfig":"21"},{"size":753,"mtime":1733995600571,"results":"32","hashOfConfig":"21"},{"size":1097,"mtime":1734005241964,"results":"33","hashOfConfig":"21"},{"size":143,"mtime":1733995600564,"results":"34","hashOfConfig":"21"},{"size":6979,"mtime":1734119627073,"results":"35","hashOfConfig":"21"},{"size":4542,"mtime":1733995600564,"results":"36","hashOfConfig":"21"},{"size":3452,"mtime":1734022341236,"results":"37","hashOfConfig":"21"},{"size":1176,"mtime":1734013510082,"results":"38","hashOfConfig":"21"},{"size":422,"mtime":1734005300863,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"7sgkss",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/Users/tech/Documents/DentalBee/notes_app/frontend/src/index.js",[],["80","81"],"/Users/tech/Documents/DentalBee/notes_app/frontend/src/App.js",[],"/Users/tech/Documents/DentalBee/notes_app/frontend/src/store.js",[],"/Users/tech/Documents/DentalBee/notes_app/frontend/src/PrivateRoute.js",[],"/Users/tech/Documents/DentalBee/notes_app/frontend/src/reducers/index.js",[],"/Users/tech/Documents/DentalBee/notes_app/frontend/src/components/Alerts/Alerts.js",[],"/Users/tech/Documents/DentalBee/notes_app/frontend/src/containers/Navbar/Navbar.js",[],"/Users/tech/Documents/DentalBee/notes_app/frontend/src/pages/Login/Login.js",[],"/Users/tech/Documents/DentalBee/notes_app/frontend/src/pages/Home/Home.js",["82"],"import { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { getNotes, updateNote, deleteNote } from \"../../actions/notes\"; // Include deleteNote action\nimport Note from \"../../components/Note/Note\";\nimport AddNote from \"../../containers/AddNote/AddNote\";\nimport { ReactMic } from 'react-mic'; // Import ReactMic\nimport './home.css';\nimport { FaTrash } from 'react-icons/fa'; // Import trash icon from react-icons\n\nconst Home = ({ notes, getNotes, updateNote, deleteNote }) => {\n  const [selectedNote, setSelectedNote] = useState(null);\n  const [editTitle, setEditTitle] = useState('');\n  const [editBody, setEditBody] = useState('');\n  const [recording, setRecording] = useState(false);\n  const [audioBlob, setAudioBlob] = useState(null);\n  const [audioUrl, setAudioUrl] = useState(null); // To store the audio URL for playback\n  const [isRecordingVisible, setRecordingVisible] = useState(false); // Toggle visibility of the recording section\n\n  useEffect(() => {\n    getNotes();\n  }, [getNotes]);\n\n  const handleNoteClick = (note) => {\n    setSelectedNote(note);\n    setEditTitle(note.title); // Set the initial title for editing\n    setEditBody(note.desc); // Set the initial body for editing\n  };\n\n  const closePopup = () => {\n    setSelectedNote(null);\n  };\n\n  const handleStartRecording = () => {\n    setRecording(true);\n  };\n\n  const handleStopRecording = () => {\n    setRecording(false);\n  };\n\n  // const handleAudioStop = (recordedBlob) => {\n  //   setAudioBlob(recordedBlob.blob); // Store the recorded audio blob\n  //   setAudioUrl(URL.createObjectURL(recordedBlob.blob)); // Create a URL to play the audio\n  // };\n\n  const handleAudioStop = (recordedBlob) => {\n    const timestamp = new Date().toISOString(); // Generate a timestamp\n    const fileName = `audio_${timestamp}.webm`; // Assign a name with .webm extension\n  \n    const audioFile = new File([recordedBlob.blob], fileName, {\n      type: recordedBlob.blob.type\n    });\n  \n    setAudioBlob(audioFile); // Store the audio file\n    setAudioUrl(URL.createObjectURL(audioFile)); // Create a URL for playback\n  };\n\n  const handleEditSubmit = (e) => {\n    e.preventDefault();\n    if (selectedNote) {\n      const updatedNote = {\n        id: selectedNote.id,\n        title: editTitle,\n        desc: editBody, // Use the description (body) field\n        audio: audioBlob // Attach the audio blob to the update payload\n      };\n\n      console.log('Updated Note details in Home.js:', updatedNote);\n      updateNote(updatedNote);\n      setSelectedNote(null); // Close the popup after editing\n      setAudioBlob(null); // Clear the audio blob after submission\n      setAudioUrl(null); // Clear the audio URL after submission\n    }\n  };\n\n  const handleToggleRecording = () => {\n    setRecordingVisible(!isRecordingVisible); // Toggle visibility of the recording component\n  };\n\n  const handleTrashClick = (noteId) => {\n    deleteNote(noteId); // Dispatch the delete action\n  };\n\n  return (\n    <div className=\"home container\">\n      <AddNote />\n\n      <div>\n  <br />\n  <h2>List of Available Notes</h2>\n  <div className=\"notes-container\">\n    <div className=\"notes\">\n      {notes.map((note) => (\n        <div className=\"note-card\" key={note.id}>\n          <Note note={note} />\n          <div className=\"note-card\">\n            <FaTrash\n              className=\"trash-icon\"\n              onClick={(e) => {\n                e.stopPropagation(); // Prevent triggering the click event for viewing the note\n                handleTrashClick(note.id);\n              }}\n              title=\"Delete Note\"\n            />\n            <button\n              className=\"view-note-btn\"\n              onClick={() => handleNoteClick(note)}\n            >\n              View Note\n            </button>\n          </div>\n          <br />\n          {note.audio && ( // Only render if note.audio is not null or empty\n            <div className=\"note-card\">\n              {console.log(`Audio URL: http://127.0.0.1:8000/${note.audio}`)}\n              <audio controls>\n                <source\n                  src={`http://127.0.0.1:8000/${note.audio}`}\n                  type=\"audio/webm\"\n                />\n                Your browser does not support the audio element.\n              </audio>\n            </div>\n          )}\n        </div>\n      ))}\n    </div>\n  </div>\n</div>\n\n\n      {/* Popup for zoomed-in note details */}\n      {selectedNote && (\n        <div className=\"popup-overlay\">\n          <div className=\"popup-content\">\n            <h2>Edit Note</h2>\n            <div className=\"form-container\">\n              <form onSubmit={handleEditSubmit}>\n                <div className=\"input-container\">\n                  <label htmlFor=\"edit-title\"><strong>Note Title: </strong></label>\n                  <input\n                    id=\"edit-title\"\n                    type=\"text\"\n                    value={editTitle}\n                    onChange={(e) => setEditTitle(e.target.value)}\n                    required\n                  />\n                </div>\n\n                <div className=\"input-container\">\n                  <label htmlFor=\"edit-body\"><strong>Note Description: </strong></label>\n                  <textarea\n                    id=\"edit-body\"\n                    value={editBody}\n                    onChange={(e) => setEditBody(e.target.value)}\n                    required\n                  />\n                </div>\n\n                {/* Note Audio Playback Section */}\n                {selectedNote.audio && (\n                  <div className=\"note-card\">\n                    <label htmlFor=\"edit-body\"><strong>Note Audio Playback: </strong></label>\n                    <audio controls>\n                      <source src={`http://127.0.0.1:8000/${selectedNote.audio}`} type=\"audio/webm\" />\n                      Your browser does not support the audio element.\n                    </audio>\n                  </div>\n                )}\n                <br />\n\n                {/* Link to toggle audio recording with dynamic text */}\n                <a\n                  href=\"#\"\n                  onClick={handleToggleRecording}\n                  className=\"toggle-recording-link\"\n                  style={{ display: 'block', textAlign: 'left' }}\n                >\n                  {selectedNote.audio ? 'Change Audio Recording' : 'Add Audio Recording'}\n                </a>\n\n                {/* Audio recording section */}\n                {isRecordingVisible && (\n                  <div className=\"audio-recording\">\n                    <div className=\"recording-buttons\">\n                      <button\n                        type=\"button\"\n                        onClick={handleStartRecording}\n                        disabled={recording}\n                        className=\"start-recording-btn\"\n                      >\n                        Start Recording\n                      </button>\n                      &nbsp;\n                      <button\n                        type=\"button\"\n                        onClick={handleStopRecording}\n                        disabled={!recording}\n                        className=\"stop-recording-btn\"\n                      >\n                        Stop Recording\n                      </button>\n                    </div>\n                    <br />\n                    <div className=\"mic-visual\">\n                      <ReactMic\n                        record={recording}\n                        className=\"sound-wave\"\n                        onStop={handleAudioStop}\n                        strokeColor=\"#000000\"\n                        backgroundColor=\"#FF4081\"\n                      />\n                    </div>\n\n                    {/* Play the recorded audio */}\n                    {audioUrl && (\n                      <div className=\"audio-player\">\n                        <audio controls>\n                          <source src={audioUrl} type=\"audio/wav\" />\n                          Your browser does not support the audio element.\n                        </audio>\n                      </div>\n                    )}\n                  </div>\n                )}\n                <br />\n\n                <button type=\"submit\" className=\"btn btn--primary\">\n                  Save Changes\n                </button>\n              </form>\n            </div>\n\n            {/* Close button outside the form */}\n            <button\n              className=\"btn btn--primary close-btn\"\n              onClick={closePopup}\n            >\n              Close Window\n            </button>\n          </div>\n        </div>\n      )}\n\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    notes: state.notes.notes\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getNotes: () => dispatch(getNotes()),\n    updateNote: (note) => dispatch(updateNote(note)), // Pass the complete updatedNote object\n    deleteNote: (id) => dispatch(deleteNote(id))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","/Users/tech/Documents/DentalBee/notes_app/frontend/src/pages/Register/Register.js",[],"/Users/tech/Documents/DentalBee/notes_app/frontend/src/reducers/alerts.js",[],"/Users/tech/Documents/DentalBee/notes_app/frontend/src/reducers/auth.js",[],"/Users/tech/Documents/DentalBee/notes_app/frontend/src/reducers/notes.js",[],"/Users/tech/Documents/DentalBee/notes_app/frontend/src/actions/alerts.js",[],"/Users/tech/Documents/DentalBee/notes_app/frontend/src/actions/notes.js",[],"/Users/tech/Documents/DentalBee/notes_app/frontend/src/actions/auth.js",[],"/Users/tech/Documents/DentalBee/notes_app/frontend/src/containers/AddNote/AddNote.js",[],"/Users/tech/Documents/DentalBee/notes_app/frontend/src/components/Note/Note.js",[],"/Users/tech/Documents/DentalBee/notes_app/frontend/src/actions/types.js",[],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":173,"column":17,"nodeType":"89","endLine":178,"endColumn":18},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]